server {
  listen 80 default deferred; # Default server
  #listen 80; # Non-default
  listen [::]:80 ipv6only=on default deferred; # Default server
  #listen [::]:80 # Non-default

  server_name my.hostname.here;

  # Okay, so, this is the /current/ best practice
  # In the future, per RFC7238, the return code will be 308
  return 301 https://$server_name$request_uri; 
}

server {
  listen 443 ssl spdy default deferred; # Default server
  #listen 443 ssl spdy; # Non-default
  listen [::]:443 ipv6only=on ssl spdy default deferred; #Default server
  #listen [::]:443 ssl spdy; # Non-default

  server_name my.hostname.here;

  ssl_certificate /etc/ssl/certs/my.hostname.here.crt;
  ssl_certificate_key /etc/ssl/private/my.hostname.here.key;

  # Strong crypto settings (inspired by https://bettercrypto.org/)
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA;
  ssl_ecdh_curve secp384r1;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/ssl/private/trustchain.crt; # Contents should be ca.crt -> intermediate.crt (order important)
  resolver 8.8.8.8 8.8.4.4; # Google DNS is as good as any
  ssl_session_cache shared:SSL:60m;
  ssl_session_timeout 5m;
  ssl_dhparam /etc/ssl/private/dhparam.pem; # Should be generated with a bit size of the certificate
  add_header Strict-Transport-Security max-age=15768000;

  # The rest of the server configuration below...
}
